<android.content.res.AssetManager: java.lang.String[] list(java.lang.String)>
<android.content.res.AssetManager: java.lang.String[] getLocales()>
<android.text.AndroidCharacter: void getDirectionalities(char[],byte[],int)>
<android.text.AndroidCharacter: int getEastAsianWidth(char)>
<android.text.AndroidCharacter: void getEastAsianWidths(char[],int,int,byte[])>
<android.text.AndroidCharacter: boolean mirror(char[],int,int)>
<android.text.AndroidCharacter: char getMirror(char)>
<android.util.Log: boolean isLoggable(java.lang.String,int)>
<android.util.EventLog: int writeEvent(int,int)>
<android.util.EventLog: int writeEvent(int,long)>
<android.util.EventLog: int writeEvent(int,float)>
<android.util.EventLog: int writeEvent(int,java.lang.String)>
<android.util.EventLog: int writeEvent(int,java.lang.Object[])>
<android.util.EventLog: void readEvents(int[],java.util.Collection)>
<android.os.SystemClock: long uptimeMillis()>
<android.os.SystemClock: long elapsedRealtime()>
<android.os.SystemClock: long elapsedRealtimeNanos()>
<android.os.SystemClock: long currentThreadTimeMillis()>
<android.os.Debug: long getNativeHeapSize()>
<android.os.Debug: long getNativeHeapAllocatedSize()>
<android.os.Debug: long getNativeHeapFreeSize()>
<android.os.Debug: void getMemoryInfo(android.os.Debug$MemoryInfo)>
<android.os.Debug: long getPss()>
<android.os.Debug: int getBinderSentTransactions()>
<android.os.Debug: int getBinderReceivedTransactions()>
<android.os.Debug: int getBinderLocalObjectCount()>
<android.os.Debug: int getBinderProxyObjectCount()>
<android.os.Debug: int getBinderDeathObjectCount()>
<android.os.Process: long getElapsedCpuTime()>
<android.os.Process: int getUidForName(java.lang.String)>
<android.os.Process: int getGidForName(java.lang.String)>
<android.os.Process: void setThreadPriority(int,int)>
<android.os.Process: int[] getExclusiveCores()>
<android.os.Process: void setThreadPriority(int)>
<android.os.Process: int getThreadPriority(int)>
<android.os.Process: void sendSignal(int,int)>
<android.os.Binder: int getCallingPid()>
<android.os.Binder: int getCallingUid()>
<android.os.Binder: long clearCallingIdentity()>
<android.os.Binder: void restoreCallingIdentity(long)>
<android.os.Binder: void flushPendingCommands()>
<android.os.Binder: void joinThreadPool()>
<android.hardware.Camera: int getNumberOfCameras()>
<android.hardware.Camera: void unlock()>
<android.hardware.Camera: void lock()>
<android.hardware.Camera: void reconnect()>
<android.hardware.Camera: void setPreviewTexture(android.graphics.SurfaceTexture)>
<android.hardware.Camera: void startPreview()>
<android.hardware.Camera: void startSmoothZoom(int)>
<android.hardware.Camera: void stopSmoothZoom()>
<android.hardware.Camera: void setDisplayOrientation(int)>
<android.media.MediaMetadataRetriever: void setDataSource(java.io.FileDescriptor,long,long)>
<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>
<android.media.MediaMetadataRetriever: void release()>
<android.media.audiofx.Visualizer: int[] getCaptureSizeRange()>
<android.media.audiofx.Visualizer: int getMaxCaptureRate()>
<android.media.ToneGenerator: boolean startTone(int,int)>
<android.media.ToneGenerator: void stopTone()>
<android.media.ToneGenerator: void release()>
<android.media.ToneGenerator: int getAudioSessionId()>
<android.media.MediaCodec: android.view.Surface createInputSurface()>
<android.media.MediaCodec: void signalEndOfInputStream()>
<android.media.MediaCodec: void setVideoScalingMode(int)>
<android.media.MediaCodec: java.lang.String getName()>
<android.media.MediaDrm: byte[] openSession()>
<android.media.MediaDrm: void closeSession(byte[])>
<android.media.MediaDrm: android.media.MediaDrm$KeyRequest getKeyRequest(byte[],byte[],java.lang.String,int,java.util.HashMap)>
<android.media.MediaDrm: byte[] provideKeyResponse(byte[],byte[])>
<android.media.MediaDrm: void restoreKeys(byte[],byte[])>
<android.media.MediaDrm: void removeKeys(byte[])>
<android.media.MediaDrm: java.util.HashMap queryKeyStatus(byte[])>
<android.media.MediaDrm: java.util.List getSecureStops()>
<android.media.MediaDrm: byte[] getSecureStop(byte[])>
<android.media.MediaDrm: void releaseSecureStops(byte[])>
<android.media.MediaDrm: void releaseAllSecureStops()>
<android.media.MediaDrm: java.lang.String getPropertyString(java.lang.String)>
<android.media.MediaDrm: byte[] getPropertyByteArray(java.lang.String)>
<android.media.MediaDrm: void setPropertyString(java.lang.String,java.lang.String)>
<android.media.MediaDrm: void setPropertyByteArray(java.lang.String,byte[])>
<android.media.MediaDrm: void release()>
<android.media.MediaExtractor: void setDataSource(android.media.MediaDataSource)>
<android.media.MediaExtractor: void setDataSource(java.io.FileDescriptor,long,long)>
<android.media.MediaExtractor: void release()>
<android.media.MediaExtractor: int getTrackCount()>
<android.media.MediaExtractor: void selectTrack(int)>
<android.media.MediaExtractor: void unselectTrack(int)>
<android.media.MediaExtractor: void seekTo(long,int)>
<android.media.MediaExtractor: boolean advance()>
<android.media.MediaExtractor: int readSampleData(java.nio.ByteBuffer,int)>
<android.media.MediaExtractor: int getSampleTrackIndex()>
<android.media.MediaExtractor: long getSampleTime()>
<android.media.MediaExtractor: int getSampleFlags()>
<android.media.MediaExtractor: boolean getSampleCryptoInfo(android.media.MediaCodec$CryptoInfo)>
<android.media.MediaExtractor: long getCachedDuration()>
<android.media.MediaExtractor: boolean hasCacheReachedEndOfStream()>
<android.media.MediaRecorder: void setCamera(android.hardware.Camera)>
<android.media.MediaRecorder: android.view.Surface getSurface()>
<android.media.MediaRecorder: void setAudioSource(int)>
<android.media.MediaRecorder: void setVideoSource(int)>
<android.media.MediaRecorder: void setOutputFormat(int)>
<android.media.MediaRecorder: void setVideoSize(int,int)>
<android.media.MediaRecorder: void setVideoFrameRate(int)>
<android.media.MediaRecorder: void setMaxDuration(int)>
<android.media.MediaRecorder: void setMaxFileSize(long)>
<android.media.MediaRecorder: void setAudioEncoder(int)>
<android.media.MediaRecorder: void setVideoEncoder(int)>
<android.media.MediaRecorder: void start()>
<android.media.MediaRecorder: void stop()>
<android.media.MediaRecorder: void pause()>
<android.media.MediaRecorder: void resume()>
<android.media.MediaRecorder: int getMaxAmplitude()>
<android.media.MediaRecorder: void release()>
<android.media.MediaPlayer: void prepareAsync()>
<android.media.MediaPlayer: int getVideoWidth()>
<android.media.MediaPlayer: int getVideoHeight()>
<android.media.MediaPlayer: boolean isPlaying()>
<android.media.MediaPlayer: void setPlaybackParams(android.media.PlaybackParams)>
<android.media.MediaPlayer: android.media.PlaybackParams getPlaybackParams()>
<android.media.MediaPlayer: void setSyncParams(android.media.SyncParams)>
<android.media.MediaPlayer: android.media.SyncParams getSyncParams()>
<android.media.MediaPlayer: int getCurrentPosition()>
<android.media.MediaPlayer: int getDuration()>
<android.media.MediaPlayer: void setNextMediaPlayer(android.media.MediaPlayer)>
<android.media.MediaPlayer: void setLooping(boolean)>
<android.media.MediaPlayer: boolean isLooping()>
<android.media.MediaPlayer: void setAudioSessionId(int)>
<android.media.MediaPlayer: int getAudioSessionId()>
<android.media.MediaPlayer: void attachAuxEffect(int)>
<android.media.MediaSync: android.view.Surface createInputSurface()>
<android.media.MediaSync: android.media.PlaybackParams getPlaybackParams()>
<android.media.MediaSync: android.media.SyncParams getSyncParams()>
<android.media.MediaCrypto: boolean requiresSecureDecoderComponent(java.lang.String)>
<android.media.MediaCrypto: void setMediaDrmSession(byte[])>
<android.media.MediaCrypto: void release()>
<android.media.SoundPool: boolean unload(int)>
<android.media.SoundPool: void pause(int)>
<android.media.SoundPool: void resume(int)>
<android.media.SoundPool: void autoPause()>
<android.media.SoundPool: void autoResume()>
<android.media.SoundPool: void stop(int)>
<android.media.SoundPool: void setPriority(int,int)>
<android.media.SoundPool: void setLoop(int,int)>
<android.media.SoundPool: void setRate(int,float)>
<android.opengl.GLES31: void glDispatchCompute(int,int,int)>
<android.opengl.GLES31: void glDispatchComputeIndirect(long)>
<android.opengl.GLES31: void glDrawArraysIndirect(int,long)>
<android.opengl.GLES31: void glDrawElementsIndirect(int,int,long)>
<android.opengl.GLES31: void glFramebufferParameteri(int,int,int)>
<android.opengl.GLES31: void glGetFramebufferParameteriv(int,int,int[],int)>
<android.opengl.GLES31: void glGetFramebufferParameteriv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES31: void glGetProgramInterfaceiv(int,int,int,int[],int)>
<android.opengl.GLES31: void glGetProgramInterfaceiv(int,int,int,java.nio.IntBuffer)>
<android.opengl.GLES31: int glGetProgramResourceIndex(int,int,java.lang.String)>
<android.opengl.GLES31: java.lang.String glGetProgramResourceName(int,int,int)>
<android.opengl.GLES31: void glGetProgramResourceiv(int,int,int,int,int[],int,int,int[],int,int[],int)>
<android.opengl.GLES31: void glGetProgramResourceiv(int,int,int,int,java.nio.IntBuffer,int,java.nio.IntBuffer,java.nio.IntBuffer)>
<android.opengl.GLES31: int glGetProgramResourceLocation(int,int,java.lang.String)>
<android.opengl.GLES31: void glUseProgramStages(int,int,int)>
<android.opengl.GLES31: void glActiveShaderProgram(int,int)>
<android.opengl.GLES31: int glCreateShaderProgramv(int,java.lang.String[])>
<android.opengl.GLES31: void glBindProgramPipeline(int)>
<android.opengl.GLES31: void glDeleteProgramPipelines(int,int[],int)>
<android.opengl.GLES31: void glDeleteProgramPipelines(int,java.nio.IntBuffer)>
<android.opengl.GLES31: void glGenProgramPipelines(int,int[],int)>
<android.opengl.GLES31: void glGenProgramPipelines(int,java.nio.IntBuffer)>
<android.opengl.GLES31: boolean glIsProgramPipeline(int)>
<android.opengl.GLES31: void glGetProgramPipelineiv(int,int,int[],int)>
<android.opengl.GLES31: void glGetProgramPipelineiv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES31: void glProgramUniform1i(int,int,int)>
<android.opengl.GLES31: void glProgramUniform2i(int,int,int,int)>
<android.opengl.GLES31: void glProgramUniform3i(int,int,int,int,int)>
<android.opengl.GLES31: void glProgramUniform4i(int,int,int,int,int,int)>
<android.opengl.GLES31: void glProgramUniform1ui(int,int,int)>
<android.opengl.GLES31: void glProgramUniform2ui(int,int,int,int)>
<android.opengl.GLES31: void glProgramUniform3ui(int,int,int,int,int)>
<android.opengl.GLES31: void glProgramUniform4ui(int,int,int,int,int,int)>
<android.opengl.GLES31: void glProgramUniform1f(int,int,float)>
<android.opengl.GLES31: void glProgramUniform2f(int,int,float,float)>
<android.opengl.GLES31: void glProgramUniform3f(int,int,float,float,float)>
<android.opengl.GLES31: void glProgramUniform4f(int,int,float,float,float,float)>
<android.opengl.GLES31: void glProgramUniform1iv(int,int,int,int[],int)>
<android.opengl.GLES31: void glProgramUniform1iv(int,int,int,java.nio.IntBuffer)>
<android.opengl.GLES31: void glProgramUniform2iv(int,int,int,int[],int)>
<android.opengl.GLES31: void glProgramUniform2iv(int,int,int,java.nio.IntBuffer)>
<android.opengl.GLES31: void glProgramUniform3iv(int,int,int,int[],int)>
<android.opengl.GLES31: void glProgramUniform3iv(int,int,int,java.nio.IntBuffer)>
<android.opengl.GLES31: void glProgramUniform4iv(int,int,int,int[],int)>
<android.opengl.GLES31: void glProgramUniform4iv(int,int,int,java.nio.IntBuffer)>
<android.opengl.GLES31: void glProgramUniform1uiv(int,int,int,int[],int)>
<android.opengl.GLES31: void glProgramUniform1uiv(int,int,int,java.nio.IntBuffer)>
<android.opengl.GLES31: void glProgramUniform2uiv(int,int,int,int[],int)>
<android.opengl.GLES31: void glProgramUniform2uiv(int,int,int,java.nio.IntBuffer)>
<android.opengl.GLES31: void glProgramUniform3uiv(int,int,int,int[],int)>
<android.opengl.GLES31: void glProgramUniform3uiv(int,int,int,java.nio.IntBuffer)>
<android.opengl.GLES31: void glProgramUniform4uiv(int,int,int,int[],int)>
<android.opengl.GLES31: void glProgramUniform4uiv(int,int,int,java.nio.IntBuffer)>
<android.opengl.GLES31: void glProgramUniform1fv(int,int,int,float[],int)>
<android.opengl.GLES31: void glProgramUniform1fv(int,int,int,java.nio.FloatBuffer)>
<android.opengl.GLES31: void glProgramUniform2fv(int,int,int,float[],int)>
<android.opengl.GLES31: void glProgramUniform2fv(int,int,int,java.nio.FloatBuffer)>
<android.opengl.GLES31: void glProgramUniform3fv(int,int,int,float[],int)>
<android.opengl.GLES31: void glProgramUniform3fv(int,int,int,java.nio.FloatBuffer)>
<android.opengl.GLES31: void glProgramUniform4fv(int,int,int,float[],int)>
<android.opengl.GLES31: void glProgramUniform4fv(int,int,int,java.nio.FloatBuffer)>
<android.opengl.GLES31: void glProgramUniformMatrix2fv(int,int,int,boolean,float[],int)>
<android.opengl.GLES31: void glProgramUniformMatrix2fv(int,int,int,boolean,java.nio.FloatBuffer)>
<android.opengl.GLES31: void glProgramUniformMatrix3fv(int,int,int,boolean,float[],int)>
<android.opengl.GLES31: void glProgramUniformMatrix3fv(int,int,int,boolean,java.nio.FloatBuffer)>
<android.opengl.GLES31: void glProgramUniformMatrix4fv(int,int,int,boolean,float[],int)>
<android.opengl.GLES31: void glProgramUniformMatrix4fv(int,int,int,boolean,java.nio.FloatBuffer)>
<android.opengl.GLES31: void glProgramUniformMatrix2x3fv(int,int,int,boolean,float[],int)>
<android.opengl.GLES31: void glProgramUniformMatrix2x3fv(int,int,int,boolean,java.nio.FloatBuffer)>
<android.opengl.GLES31: void glProgramUniformMatrix3x2fv(int,int,int,boolean,float[],int)>
<android.opengl.GLES31: void glProgramUniformMatrix3x2fv(int,int,int,boolean,java.nio.FloatBuffer)>
<android.opengl.GLES31: void glProgramUniformMatrix2x4fv(int,int,int,boolean,float[],int)>
<android.opengl.GLES31: void glProgramUniformMatrix2x4fv(int,int,int,boolean,java.nio.FloatBuffer)>
<android.opengl.GLES31: void glProgramUniformMatrix4x2fv(int,int,int,boolean,float[],int)>
<android.opengl.GLES31: void glProgramUniformMatrix4x2fv(int,int,int,boolean,java.nio.FloatBuffer)>
<android.opengl.GLES31: void glProgramUniformMatrix3x4fv(int,int,int,boolean,float[],int)>
<android.opengl.GLES31: void glProgramUniformMatrix3x4fv(int,int,int,boolean,java.nio.FloatBuffer)>
<android.opengl.GLES31: void glProgramUniformMatrix4x3fv(int,int,int,boolean,float[],int)>
<android.opengl.GLES31: void glProgramUniformMatrix4x3fv(int,int,int,boolean,java.nio.FloatBuffer)>
<android.opengl.GLES31: void glValidateProgramPipeline(int)>
<android.opengl.GLES31: java.lang.String glGetProgramPipelineInfoLog(int)>
<android.opengl.GLES31: void glBindImageTexture(int,int,int,boolean,int,int,int)>
<android.opengl.GLES31: void glGetBooleani_v(int,int,boolean[],int)>
<android.opengl.GLES31: void glGetBooleani_v(int,int,java.nio.IntBuffer)>
<android.opengl.GLES31: void glMemoryBarrier(int)>
<android.opengl.GLES31: void glMemoryBarrierByRegion(int)>
<android.opengl.GLES31: void glTexStorage2DMultisample(int,int,int,int,int,boolean)>
<android.opengl.GLES31: void glGetMultisamplefv(int,int,float[],int)>
<android.opengl.GLES31: void glGetMultisamplefv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLES31: void glSampleMaski(int,int)>
<android.opengl.GLES31: void glGetTexLevelParameteriv(int,int,int,int[],int)>
<android.opengl.GLES31: void glGetTexLevelParameteriv(int,int,int,java.nio.IntBuffer)>
<android.opengl.GLES31: void glGetTexLevelParameterfv(int,int,int,float[],int)>
<android.opengl.GLES31: void glGetTexLevelParameterfv(int,int,int,java.nio.FloatBuffer)>
<android.opengl.GLES31: void glBindVertexBuffer(int,int,long,int)>
<android.opengl.GLES31: void glVertexAttribFormat(int,int,int,boolean,int)>
<android.opengl.GLES31: void glVertexAttribIFormat(int,int,int,int)>
<android.opengl.GLES31: void glVertexAttribBinding(int,int)>
<android.opengl.GLES31: void glVertexBindingDivisor(int,int)>
<android.opengl.GLES30: void glReadBuffer(int)>
<android.opengl.GLES30: void glDrawRangeElements(int,int,int,int,int,java.nio.Buffer)>
<android.opengl.GLES30: void glDrawRangeElements(int,int,int,int,int,int)>
<android.opengl.GLES30: void glTexImage3D(int,int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.opengl.GLES30: void glTexImage3D(int,int,int,int,int,int,int,int,int,int)>
<android.opengl.GLES30: void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.opengl.GLES30: void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int)>
<android.opengl.GLES30: void glCopyTexSubImage3D(int,int,int,int,int,int,int,int,int)>
<android.opengl.GLES30: void glCompressedTexImage3D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.opengl.GLES30: void glCompressedTexImage3D(int,int,int,int,int,int,int,int,int)>
<android.opengl.GLES30: void glCompressedTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.opengl.GLES30: void glCompressedTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int)>
<android.opengl.GLES30: void glGenQueries(int,int[],int)>
<android.opengl.GLES30: void glGenQueries(int,java.nio.IntBuffer)>
<android.opengl.GLES30: void glDeleteQueries(int,int[],int)>
<android.opengl.GLES30: void glDeleteQueries(int,java.nio.IntBuffer)>
<android.opengl.GLES30: boolean glIsQuery(int)>
<android.opengl.GLES30: void glBeginQuery(int,int)>
<android.opengl.GLES30: void glEndQuery(int)>
<android.opengl.GLES30: void glGetQueryiv(int,int,int[],int)>
<android.opengl.GLES30: void glGetQueryiv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES30: void glGetQueryObjectuiv(int,int,int[],int)>
<android.opengl.GLES30: void glGetQueryObjectuiv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES30: boolean glUnmapBuffer(int)>
<android.opengl.GLES30: java.nio.Buffer glGetBufferPointerv(int,int)>
<android.opengl.GLES30: void glDrawBuffers(int,int[],int)>
<android.opengl.GLES30: void glDrawBuffers(int,java.nio.IntBuffer)>
<android.opengl.GLES30: void glUniformMatrix2x3fv(int,int,boolean,float[],int)>
<android.opengl.GLES30: void glUniformMatrix2x3fv(int,int,boolean,java.nio.FloatBuffer)>
<android.opengl.GLES30: void glUniformMatrix3x2fv(int,int,boolean,float[],int)>
<android.opengl.GLES30: void glUniformMatrix3x2fv(int,int,boolean,java.nio.FloatBuffer)>
<android.opengl.GLES30: void glUniformMatrix2x4fv(int,int,boolean,float[],int)>
<android.opengl.GLES30: void glUniformMatrix2x4fv(int,int,boolean,java.nio.FloatBuffer)>
<android.opengl.GLES30: void glUniformMatrix4x2fv(int,int,boolean,float[],int)>
<android.opengl.GLES30: void glUniformMatrix4x2fv(int,int,boolean,java.nio.FloatBuffer)>
<android.opengl.GLES30: void glUniformMatrix3x4fv(int,int,boolean,float[],int)>
<android.opengl.GLES30: void glUniformMatrix3x4fv(int,int,boolean,java.nio.FloatBuffer)>
<android.opengl.GLES30: void glUniformMatrix4x3fv(int,int,boolean,float[],int)>
<android.opengl.GLES30: void glUniformMatrix4x3fv(int,int,boolean,java.nio.FloatBuffer)>
<android.opengl.GLES30: void glBlitFramebuffer(int,int,int,int,int,int,int,int,int,int)>
<android.opengl.GLES30: void glRenderbufferStorageMultisample(int,int,int,int,int)>
<android.opengl.GLES30: void glFramebufferTextureLayer(int,int,int,int,int)>
<android.opengl.GLES30: java.nio.Buffer glMapBufferRange(int,int,int,int)>
<android.opengl.GLES30: void glFlushMappedBufferRange(int,int,int)>
<android.opengl.GLES30: void glBindVertexArray(int)>
<android.opengl.GLES30: void glDeleteVertexArrays(int,int[],int)>
<android.opengl.GLES30: void glDeleteVertexArrays(int,java.nio.IntBuffer)>
<android.opengl.GLES30: void glGenVertexArrays(int,int[],int)>
<android.opengl.GLES30: void glGenVertexArrays(int,java.nio.IntBuffer)>
<android.opengl.GLES30: boolean glIsVertexArray(int)>
<android.opengl.GLES30: void glGetIntegeri_v(int,int,int[],int)>
<android.opengl.GLES30: void glGetIntegeri_v(int,int,java.nio.IntBuffer)>
<android.opengl.GLES30: void glBeginTransformFeedback(int)>
<android.opengl.GLES30: void glEndTransformFeedback()>
<android.opengl.GLES30: void glBindBufferRange(int,int,int,int,int)>
<android.opengl.GLES30: void glBindBufferBase(int,int,int)>
<android.opengl.GLES30: void glTransformFeedbackVaryings(int,java.lang.String[],int)>
<android.opengl.GLES30: void glGetTransformFeedbackVarying(int,int,int,int[],int,int[],int,int[],int,byte[],int)>
<android.opengl.GLES30: void glGetTransformFeedbackVarying(int,int,int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,byte)>
<android.opengl.GLES30: void glGetTransformFeedbackVarying(int,int,int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.ByteBuffer)>
<android.opengl.GLES30: java.lang.String glGetTransformFeedbackVarying(int,int,int[],int,int[],int)>
<android.opengl.GLES30: java.lang.String glGetTransformFeedbackVarying(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>
<android.opengl.GLES30: void glVertexAttribIPointer(int,int,int,int,int)>
<android.opengl.GLES30: void glGetVertexAttribIiv(int,int,int[],int)>
<android.opengl.GLES30: void glGetVertexAttribIiv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES30: void glGetVertexAttribIuiv(int,int,int[],int)>
<android.opengl.GLES30: void glGetVertexAttribIuiv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES30: void glVertexAttribI4i(int,int,int,int,int)>
<android.opengl.GLES30: void glVertexAttribI4ui(int,int,int,int,int)>
<android.opengl.GLES30: void glVertexAttribI4iv(int,int[],int)>
<android.opengl.GLES30: void glVertexAttribI4iv(int,java.nio.IntBuffer)>
<android.opengl.GLES30: void glVertexAttribI4uiv(int,int[],int)>
<android.opengl.GLES30: void glVertexAttribI4uiv(int,java.nio.IntBuffer)>
<android.opengl.GLES30: void glGetUniformuiv(int,int,int[],int)>
<android.opengl.GLES30: void glGetUniformuiv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES30: int glGetFragDataLocation(int,java.lang.String)>
<android.opengl.GLES30: void glUniform1ui(int,int)>
<android.opengl.GLES30: void glUniform2ui(int,int,int)>
<android.opengl.GLES30: void glUniform3ui(int,int,int,int)>
<android.opengl.GLES30: void glUniform4ui(int,int,int,int,int)>
<android.opengl.GLES30: void glUniform1uiv(int,int,int[],int)>
<android.opengl.GLES30: void glUniform1uiv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES30: void glUniform2uiv(int,int,int[],int)>
<android.opengl.GLES30: void glUniform2uiv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES30: void glUniform3uiv(int,int,int[],int)>
<android.opengl.GLES30: void glUniform3uiv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES30: void glUniform4uiv(int,int,int[],int)>
<android.opengl.GLES30: void glUniform4uiv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES30: void glClearBufferiv(int,int,int[],int)>
<android.opengl.GLES30: void glClearBufferiv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES30: void glClearBufferuiv(int,int,int[],int)>
<android.opengl.GLES30: void glClearBufferuiv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES30: void glClearBufferfv(int,int,float[],int)>
<android.opengl.GLES30: void glClearBufferfv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLES30: void glClearBufferfi(int,int,float,int)>
<android.opengl.GLES30: java.lang.String glGetStringi(int,int)>
<android.opengl.GLES30: void glCopyBufferSubData(int,int,int,int,int)>
<android.opengl.GLES30: void glGetUniformIndices(int,java.lang.String[],int[],int)>
<android.opengl.GLES30: void glGetUniformIndices(int,java.lang.String[],java.nio.IntBuffer)>
<android.opengl.GLES30: void glGetActiveUniformsiv(int,int,int[],int,int,int[],int)>
<android.opengl.GLES30: void glGetActiveUniformsiv(int,int,java.nio.IntBuffer,int,java.nio.IntBuffer)>
<android.opengl.GLES30: int glGetUniformBlockIndex(int,java.lang.String)>
<android.opengl.GLES30: void glGetActiveUniformBlockiv(int,int,int,int[],int)>
<android.opengl.GLES30: void glGetActiveUniformBlockiv(int,int,int,java.nio.IntBuffer)>
<android.opengl.GLES30: void glGetActiveUniformBlockName(int,int,int,int[],int,byte[],int)>
<android.opengl.GLES30: void glGetActiveUniformBlockName(int,int,java.nio.Buffer,java.nio.Buffer)>
<android.opengl.GLES30: java.lang.String glGetActiveUniformBlockName(int,int)>
<android.opengl.GLES30: void glUniformBlockBinding(int,int,int)>
<android.opengl.GLES30: void glDrawArraysInstanced(int,int,int,int)>
<android.opengl.GLES30: void glDrawElementsInstanced(int,int,int,java.nio.Buffer,int)>
<android.opengl.GLES30: void glDrawElementsInstanced(int,int,int,int,int)>
<android.opengl.GLES30: long glFenceSync(int,int)>
<android.opengl.GLES30: boolean glIsSync(long)>
<android.opengl.GLES30: void glDeleteSync(long)>
<android.opengl.GLES30: int glClientWaitSync(long,int,long)>
<android.opengl.GLES30: void glWaitSync(long,int,long)>
<android.opengl.GLES30: void glGetInteger64v(int,long[],int)>
<android.opengl.GLES30: void glGetInteger64v(int,java.nio.LongBuffer)>
<android.opengl.GLES30: void glGetSynciv(long,int,int,int[],int,int[],int)>
<android.opengl.GLES30: void glGetSynciv(long,int,int,java.nio.IntBuffer,java.nio.IntBuffer)>
<android.opengl.GLES30: void glGetInteger64i_v(int,int,long[],int)>
<android.opengl.GLES30: void glGetInteger64i_v(int,int,java.nio.LongBuffer)>
<android.opengl.GLES30: void glGetBufferParameteri64v(int,int,long[],int)>
<android.opengl.GLES30: void glGetBufferParameteri64v(int,int,java.nio.LongBuffer)>
<android.opengl.GLES30: void glGenSamplers(int,int[],int)>
<android.opengl.GLES30: void glGenSamplers(int,java.nio.IntBuffer)>
<android.opengl.GLES30: void glDeleteSamplers(int,int[],int)>
<android.opengl.GLES30: void glDeleteSamplers(int,java.nio.IntBuffer)>
<android.opengl.GLES30: boolean glIsSampler(int)>
<android.opengl.GLES30: void glBindSampler(int,int)>
<android.opengl.GLES30: void glSamplerParameteri(int,int,int)>
<android.opengl.GLES30: void glSamplerParameteriv(int,int,int[],int)>
<android.opengl.GLES30: void glSamplerParameteriv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES30: void glSamplerParameterf(int,int,float)>
<android.opengl.GLES30: void glSamplerParameterfv(int,int,float[],int)>
<android.opengl.GLES30: void glSamplerParameterfv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLES30: void glGetSamplerParameteriv(int,int,int[],int)>
<android.opengl.GLES30: void glGetSamplerParameteriv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES30: void glGetSamplerParameterfv(int,int,float[],int)>
<android.opengl.GLES30: void glGetSamplerParameterfv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLES30: void glVertexAttribDivisor(int,int)>
<android.opengl.GLES30: void glBindTransformFeedback(int,int)>
<android.opengl.GLES30: void glDeleteTransformFeedbacks(int,int[],int)>
<android.opengl.GLES30: void glDeleteTransformFeedbacks(int,java.nio.IntBuffer)>
<android.opengl.GLES30: void glGenTransformFeedbacks(int,int[],int)>
<android.opengl.GLES30: void glGenTransformFeedbacks(int,java.nio.IntBuffer)>
<android.opengl.GLES30: boolean glIsTransformFeedback(int)>
<android.opengl.GLES30: void glPauseTransformFeedback()>
<android.opengl.GLES30: void glResumeTransformFeedback()>
<android.opengl.GLES30: void glGetProgramBinary(int,int,int[],int,int[],int,java.nio.Buffer)>
<android.opengl.GLES30: void glGetProgramBinary(int,int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.Buffer)>
<android.opengl.GLES30: void glProgramBinary(int,int,java.nio.Buffer,int)>
<android.opengl.GLES30: void glProgramParameteri(int,int,int)>
<android.opengl.GLES30: void glInvalidateFramebuffer(int,int,int[],int)>
<android.opengl.GLES30: void glInvalidateFramebuffer(int,int,java.nio.IntBuffer)>
<android.opengl.GLES30: void glInvalidateSubFramebuffer(int,int,int[],int,int,int,int,int)>
<android.opengl.GLES30: void glInvalidateSubFramebuffer(int,int,java.nio.IntBuffer,int,int,int,int)>
<android.opengl.GLES30: void glTexStorage2D(int,int,int,int,int)>
<android.opengl.GLES30: void glTexStorage3D(int,int,int,int,int,int)>
<android.opengl.GLES30: void glGetInternalformativ(int,int,int,int,int[],int)>
<android.opengl.GLES30: void glGetInternalformativ(int,int,int,int,java.nio.IntBuffer)>
<android.opengl.GLES30: void glReadPixels(int,int,int,int,int,int,int)>
<android.opengl.GLES11Ext: void glBlendEquationSeparateOES(int,int)>
<android.opengl.GLES11Ext: void glBlendFuncSeparateOES(int,int,int,int)>
<android.opengl.GLES11Ext: void glBlendEquationOES(int)>
<android.opengl.GLES11Ext: void glDrawTexsOES(short,short,short,short,short)>
<android.opengl.GLES11Ext: void glDrawTexiOES(int,int,int,int,int)>
<android.opengl.GLES11Ext: void glDrawTexxOES(int,int,int,int,int)>
<android.opengl.GLES11Ext: void glDrawTexsvOES(short[],int)>
<android.opengl.GLES11Ext: void glDrawTexsvOES(java.nio.ShortBuffer)>
<android.opengl.GLES11Ext: void glDrawTexivOES(int[],int)>
<android.opengl.GLES11Ext: void glDrawTexivOES(java.nio.IntBuffer)>
<android.opengl.GLES11Ext: void glDrawTexxvOES(int[],int)>
<android.opengl.GLES11Ext: void glDrawTexxvOES(java.nio.IntBuffer)>
<android.opengl.GLES11Ext: void glDrawTexfOES(float,float,float,float,float)>
<android.opengl.GLES11Ext: void glDrawTexfvOES(float[],int)>
<android.opengl.GLES11Ext: void glDrawTexfvOES(java.nio.FloatBuffer)>
<android.opengl.GLES11Ext: void glEGLImageTargetTexture2DOES(int,java.nio.Buffer)>
<android.opengl.GLES11Ext: void glEGLImageTargetRenderbufferStorageOES(int,java.nio.Buffer)>
<android.opengl.GLES11Ext: void glAlphaFuncxOES(int,int)>
<android.opengl.GLES11Ext: void glClearColorxOES(int,int,int,int)>
<android.opengl.GLES11Ext: void glClearDepthxOES(int)>
<android.opengl.GLES11Ext: void glClipPlanexOES(int,int[],int)>
<android.opengl.GLES11Ext: void glClipPlanexOES(int,java.nio.IntBuffer)>
<android.opengl.GLES11Ext: void glColor4xOES(int,int,int,int)>
<android.opengl.GLES11Ext: void glDepthRangexOES(int,int)>
<android.opengl.GLES11Ext: void glFogxOES(int,int)>
<android.opengl.GLES11Ext: void glFogxvOES(int,int[],int)>
<android.opengl.GLES11Ext: void glFogxvOES(int,java.nio.IntBuffer)>
<android.opengl.GLES11Ext: void glFrustumxOES(int,int,int,int,int,int)>
<android.opengl.GLES11Ext: void glGetClipPlanexOES(int,int[],int)>
<android.opengl.GLES11Ext: void glGetClipPlanexOES(int,java.nio.IntBuffer)>
<android.opengl.GLES11Ext: void glGetFixedvOES(int,int[],int)>
<android.opengl.GLES11Ext: void glGetFixedvOES(int,java.nio.IntBuffer)>
<android.opengl.GLES11Ext: void glGetLightxvOES(int,int,int[],int)>
<android.opengl.GLES11Ext: void glGetLightxvOES(int,int,java.nio.IntBuffer)>
<android.opengl.GLES11Ext: void glGetMaterialxvOES(int,int,int[],int)>
<android.opengl.GLES11Ext: void glGetMaterialxvOES(int,int,java.nio.IntBuffer)>
<android.opengl.GLES11Ext: void glGetTexEnvxvOES(int,int,int[],int)>
<android.opengl.GLES11Ext: void glGetTexEnvxvOES(int,int,java.nio.IntBuffer)>
<android.opengl.GLES11Ext: void glGetTexParameterxvOES(int,int,int[],int)>
<android.opengl.GLES11Ext: void glGetTexParameterxvOES(int,int,java.nio.IntBuffer)>
<android.opengl.GLES11Ext: void glLightModelxOES(int,int)>
<android.opengl.GLES11Ext: void glLightModelxvOES(int,int[],int)>
<android.opengl.GLES11Ext: void glLightModelxvOES(int,java.nio.IntBuffer)>
<android.opengl.GLES11Ext: void glLightxOES(int,int,int)>
<android.opengl.GLES11Ext: void glLightxvOES(int,int,int[],int)>
<android.opengl.GLES11Ext: void glLightxvOES(int,int,java.nio.IntBuffer)>
<android.opengl.GLES11Ext: void glLineWidthxOES(int)>
<android.opengl.GLES11Ext: void glLoadMatrixxOES(int[],int)>
<android.opengl.GLES11Ext: void glLoadMatrixxOES(java.nio.IntBuffer)>
<android.opengl.GLES11Ext: void glMaterialxOES(int,int,int)>
<android.opengl.GLES11Ext: void glMaterialxvOES(int,int,int[],int)>
<android.opengl.GLES11Ext: void glMaterialxvOES(int,int,java.nio.IntBuffer)>
<android.opengl.GLES11Ext: void glMultMatrixxOES(int[],int)>
<android.opengl.GLES11Ext: void glMultMatrixxOES(java.nio.IntBuffer)>
<android.opengl.GLES11Ext: void glMultiTexCoord4xOES(int,int,int,int,int)>
<android.opengl.GLES11Ext: void glNormal3xOES(int,int,int)>
<android.opengl.GLES11Ext: void glOrthoxOES(int,int,int,int,int,int)>
<android.opengl.GLES11Ext: void glPointParameterxOES(int,int)>
<android.opengl.GLES11Ext: void glPointParameterxvOES(int,int[],int)>
<android.opengl.GLES11Ext: void glPointParameterxvOES(int,java.nio.IntBuffer)>
<android.opengl.GLES11Ext: void glPointSizexOES(int)>
<android.opengl.GLES11Ext: void glPolygonOffsetxOES(int,int)>
<android.opengl.GLES11Ext: void glRotatexOES(int,int,int,int)>
<android.opengl.GLES11Ext: void glSampleCoveragexOES(int,boolean)>
<android.opengl.GLES11Ext: void glScalexOES(int,int,int)>
<android.opengl.GLES11Ext: void glTexEnvxOES(int,int,int)>
<android.opengl.GLES11Ext: void glTexEnvxvOES(int,int,int[],int)>
<android.opengl.GLES11Ext: void glTexEnvxvOES(int,int,java.nio.IntBuffer)>
<android.opengl.GLES11Ext: void glTexParameterxOES(int,int,int)>
<android.opengl.GLES11Ext: void glTexParameterxvOES(int,int,int[],int)>
<android.opengl.GLES11Ext: void glTexParameterxvOES(int,int,java.nio.IntBuffer)>
<android.opengl.GLES11Ext: void glTranslatexOES(int,int,int)>
<android.opengl.GLES11Ext: boolean glIsRenderbufferOES(int)>
<android.opengl.GLES11Ext: void glBindRenderbufferOES(int,int)>
<android.opengl.GLES11Ext: void glDeleteRenderbuffersOES(int,int[],int)>
<android.opengl.GLES11Ext: void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)>
<android.opengl.GLES11Ext: void glGenRenderbuffersOES(int,int[],int)>
<android.opengl.GLES11Ext: void glGenRenderbuffersOES(int,java.nio.IntBuffer)>
<android.opengl.GLES11Ext: void glRenderbufferStorageOES(int,int,int,int)>
<android.opengl.GLES11Ext: void glGetRenderbufferParameterivOES(int,int,int[],int)>
<android.opengl.GLES11Ext: void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)>
<android.opengl.GLES11Ext: boolean glIsFramebufferOES(int)>
<android.opengl.GLES11Ext: void glBindFramebufferOES(int,int)>
<android.opengl.GLES11Ext: void glDeleteFramebuffersOES(int,int[],int)>
<android.opengl.GLES11Ext: void glDeleteFramebuffersOES(int,java.nio.IntBuffer)>
<android.opengl.GLES11Ext: void glGenFramebuffersOES(int,int[],int)>
<android.opengl.GLES11Ext: void glGenFramebuffersOES(int,java.nio.IntBuffer)>
<android.opengl.GLES11Ext: int glCheckFramebufferStatusOES(int)>
<android.opengl.GLES11Ext: void glFramebufferRenderbufferOES(int,int,int,int)>
<android.opengl.GLES11Ext: void glFramebufferTexture2DOES(int,int,int,int,int)>
<android.opengl.GLES11Ext: void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)>
<android.opengl.GLES11Ext: void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)>
<android.opengl.GLES11Ext: void glGenerateMipmapOES(int)>
<android.opengl.GLES11Ext: void glCurrentPaletteMatrixOES(int)>
<android.opengl.GLES11Ext: void glLoadPaletteFromModelViewMatrixOES()>
<android.opengl.GLES11Ext: void glDepthRangefOES(float,float)>
<android.opengl.GLES11Ext: void glFrustumfOES(float,float,float,float,float,float)>
<android.opengl.GLES11Ext: void glOrthofOES(float,float,float,float,float,float)>
<android.opengl.GLES11Ext: void glClipPlanefOES(int,float[],int)>
<android.opengl.GLES11Ext: void glClipPlanefOES(int,java.nio.FloatBuffer)>
<android.opengl.GLES11Ext: void glGetClipPlanefOES(int,float[],int)>
<android.opengl.GLES11Ext: void glGetClipPlanefOES(int,java.nio.FloatBuffer)>
<android.opengl.GLES11Ext: void glClearDepthfOES(float)>
<android.opengl.GLES11Ext: void glTexGenfOES(int,int,float)>
<android.opengl.GLES11Ext: void glTexGenfvOES(int,int,float[],int)>
<android.opengl.GLES11Ext: void glTexGenfvOES(int,int,java.nio.FloatBuffer)>
<android.opengl.GLES11Ext: void glTexGeniOES(int,int,int)>
<android.opengl.GLES11Ext: void glTexGenivOES(int,int,int[],int)>
<android.opengl.GLES11Ext: void glTexGenivOES(int,int,java.nio.IntBuffer)>
<android.opengl.GLES11Ext: void glTexGenxOES(int,int,int)>
<android.opengl.GLES11Ext: void glTexGenxvOES(int,int,int[],int)>
<android.opengl.GLES11Ext: void glTexGenxvOES(int,int,java.nio.IntBuffer)>
<android.opengl.GLES11Ext: void glGetTexGenfvOES(int,int,float[],int)>
<android.opengl.GLES11Ext: void glGetTexGenfvOES(int,int,java.nio.FloatBuffer)>
<android.opengl.GLES11Ext: void glGetTexGenivOES(int,int,int[],int)>
<android.opengl.GLES11Ext: void glGetTexGenivOES(int,int,java.nio.IntBuffer)>
<android.opengl.GLES11Ext: void glGetTexGenxvOES(int,int,int[],int)>
<android.opengl.GLES11Ext: void glGetTexGenxvOES(int,int,java.nio.IntBuffer)>
<android.opengl.EGLExt: boolean eglPresentationTimeANDROID(android.opengl.EGLDisplay,android.opengl.EGLSurface,long)>
<android.opengl.GLES10Ext: int glQueryMatrixxOES(int[],int,int[],int)>
<android.opengl.GLES10Ext: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)>
<android.opengl.EGL14: int eglGetError()>
<android.opengl.EGL14: android.opengl.EGLDisplay eglGetDisplay(int)>
<android.opengl.EGL14: boolean eglInitialize(android.opengl.EGLDisplay,int[],int,int[],int)>
<android.opengl.EGL14: boolean eglTerminate(android.opengl.EGLDisplay)>
<android.opengl.EGL14: java.lang.String eglQueryString(android.opengl.EGLDisplay,int)>
<android.opengl.EGL14: boolean eglGetConfigs(android.opengl.EGLDisplay,android.opengl.EGLConfig[],int,int,int[],int)>
<android.opengl.EGL14: boolean eglChooseConfig(android.opengl.EGLDisplay,int[],int,android.opengl.EGLConfig[],int,int,int[],int)>
<android.opengl.EGL14: boolean eglGetConfigAttrib(android.opengl.EGLDisplay,android.opengl.EGLConfig,int,int[],int)>
<android.opengl.EGL14: android.opengl.EGLSurface eglCreatePbufferSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,int[],int)>
<android.opengl.EGL14: android.opengl.EGLSurface eglCreatePixmapSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,int,int[],int)>
<android.opengl.EGL14: boolean eglDestroySurface(android.opengl.EGLDisplay,android.opengl.EGLSurface)>
<android.opengl.EGL14: boolean eglQuerySurface(android.opengl.EGLDisplay,android.opengl.EGLSurface,int,int[],int)>
<android.opengl.EGL14: boolean eglBindAPI(int)>
<android.opengl.EGL14: int eglQueryAPI()>
<android.opengl.EGL14: boolean eglWaitClient()>
<android.opengl.EGL14: boolean eglReleaseThread()>
<android.opengl.EGL14: android.opengl.EGLSurface eglCreatePbufferFromClientBuffer(android.opengl.EGLDisplay,int,int,android.opengl.EGLConfig,int[],int)>
<android.opengl.EGL14: boolean eglSurfaceAttrib(android.opengl.EGLDisplay,android.opengl.EGLSurface,int,int)>
<android.opengl.EGL14: boolean eglBindTexImage(android.opengl.EGLDisplay,android.opengl.EGLSurface,int)>
<android.opengl.EGL14: boolean eglReleaseTexImage(android.opengl.EGLDisplay,android.opengl.EGLSurface,int)>
<android.opengl.EGL14: boolean eglSwapInterval(android.opengl.EGLDisplay,int)>
<android.opengl.EGL14: android.opengl.EGLContext eglCreateContext(android.opengl.EGLDisplay,android.opengl.EGLConfig,android.opengl.EGLContext,int[],int)>
<android.opengl.EGL14: boolean eglDestroyContext(android.opengl.EGLDisplay,android.opengl.EGLContext)>
<android.opengl.EGL14: boolean eglMakeCurrent(android.opengl.EGLDisplay,android.opengl.EGLSurface,android.opengl.EGLSurface,android.opengl.EGLContext)>
<android.opengl.EGL14: android.opengl.EGLContext eglGetCurrentContext()>
<android.opengl.EGL14: android.opengl.EGLSurface eglGetCurrentSurface(int)>
<android.opengl.EGL14: android.opengl.EGLDisplay eglGetCurrentDisplay()>
<android.opengl.EGL14: boolean eglQueryContext(android.opengl.EGLDisplay,android.opengl.EGLContext,int,int[],int)>
<android.opengl.EGL14: boolean eglWaitGL()>
<android.opengl.EGL14: boolean eglWaitNative(int)>
<android.opengl.EGL14: boolean eglSwapBuffers(android.opengl.EGLDisplay,android.opengl.EGLSurface)>
<android.opengl.EGL14: boolean eglCopyBuffers(android.opengl.EGLDisplay,android.opengl.EGLSurface,int)>
<android.opengl.Matrix: void multiplyMM(float[],int,float[],int,float[],int)>
<android.opengl.Matrix: void multiplyMV(float[],int,float[],int,float[],int)>
<android.opengl.GLES32: void glBlendBarrier()>
<android.opengl.GLES32: void glCopyImageSubData(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)>
<android.opengl.GLES32: void glDebugMessageControl(int,int,int,int,int[],int,boolean)>
<android.opengl.GLES32: void glDebugMessageControl(int,int,int,int,java.nio.IntBuffer,boolean)>
<android.opengl.GLES32: void glDebugMessageInsert(int,int,int,int,int,java.lang.String)>
<android.opengl.GLES32: void glDebugMessageCallback(android.opengl.GLES32$DebugProc)>
<android.opengl.GLES32: int glGetDebugMessageLog(int,int,int[],int,int[],int,int[],int,int[],int,int[],int,byte[],int)>
<android.opengl.GLES32: int glGetDebugMessageLog(int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.ByteBuffer)>
<android.opengl.GLES32: java.lang.String[] glGetDebugMessageLog(int,int[],int,int[],int,int[],int,int[],int)>
<android.opengl.GLES32: java.lang.String[] glGetDebugMessageLog(int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer)>
<android.opengl.GLES32: void glPushDebugGroup(int,int,int,java.lang.String)>
<android.opengl.GLES32: void glPopDebugGroup()>
<android.opengl.GLES32: void glObjectLabel(int,int,int,java.lang.String)>
<android.opengl.GLES32: java.lang.String glGetObjectLabel(int,int)>
<android.opengl.GLES32: void glObjectPtrLabel(long,java.lang.String)>
<android.opengl.GLES32: java.lang.String glGetObjectPtrLabel(long)>
<android.opengl.GLES32: long glGetPointerv(int)>
<android.opengl.GLES32: void glEnablei(int,int)>
<android.opengl.GLES32: void glDisablei(int,int)>
<android.opengl.GLES32: void glBlendEquationi(int,int)>
<android.opengl.GLES32: void glBlendEquationSeparatei(int,int,int)>
<android.opengl.GLES32: void glBlendFunci(int,int,int)>
<android.opengl.GLES32: void glBlendFuncSeparatei(int,int,int,int,int)>
<android.opengl.GLES32: void glColorMaski(int,boolean,boolean,boolean,boolean)>
<android.opengl.GLES32: boolean glIsEnabledi(int,int)>
<android.opengl.GLES32: void glDrawElementsBaseVertex(int,int,int,java.nio.Buffer,int)>
<android.opengl.GLES32: void glDrawRangeElementsBaseVertex(int,int,int,int,int,java.nio.Buffer,int)>
<android.opengl.GLES32: void glDrawElementsInstancedBaseVertex(int,int,int,java.nio.Buffer,int,int)>
<android.opengl.GLES32: void glDrawElementsInstancedBaseVertex(int,int,int,int,int,int)>
<android.opengl.GLES32: void glFramebufferTexture(int,int,int,int)>
<android.opengl.GLES32: void glPrimitiveBoundingBox(float,float,float,float,float,float,float,float)>
<android.opengl.GLES32: int glGetGraphicsResetStatus()>
<android.opengl.GLES32: void glReadnPixels(int,int,int,int,int,int,int,java.nio.Buffer)>
<android.opengl.GLES32: void glGetnUniformfv(int,int,int,float[],int)>
<android.opengl.GLES32: void glGetnUniformfv(int,int,int,java.nio.FloatBuffer)>
<android.opengl.GLES32: void glGetnUniformiv(int,int,int,int[],int)>
<android.opengl.GLES32: void glGetnUniformiv(int,int,int,java.nio.IntBuffer)>
<android.opengl.GLES32: void glGetnUniformuiv(int,int,int,int[],int)>
<android.opengl.GLES32: void glGetnUniformuiv(int,int,int,java.nio.IntBuffer)>
<android.opengl.GLES32: void glMinSampleShading(float)>
<android.opengl.GLES32: void glPatchParameteri(int,int)>
<android.opengl.GLES32: void glTexParameterIiv(int,int,int[],int)>
<android.opengl.GLES32: void glTexParameterIiv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES32: void glTexParameterIuiv(int,int,int[],int)>
<android.opengl.GLES32: void glTexParameterIuiv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES32: void glGetTexParameterIiv(int,int,int[],int)>
<android.opengl.GLES32: void glGetTexParameterIiv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES32: void glGetTexParameterIuiv(int,int,int[],int)>
<android.opengl.GLES32: void glGetTexParameterIuiv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES32: void glSamplerParameterIiv(int,int,int[],int)>
<android.opengl.GLES32: void glSamplerParameterIiv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES32: void glSamplerParameterIuiv(int,int,int[],int)>
<android.opengl.GLES32: void glSamplerParameterIuiv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES32: void glGetSamplerParameterIiv(int,int,int[],int)>
<android.opengl.GLES32: void glGetSamplerParameterIiv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES32: void glGetSamplerParameterIuiv(int,int,int[],int)>
<android.opengl.GLES32: void glGetSamplerParameterIuiv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES32: void glTexBuffer(int,int,int)>
<android.opengl.GLES32: void glTexBufferRange(int,int,int,int,int)>
<android.opengl.GLES32: void glTexStorage3DMultisample(int,int,int,int,int,int,boolean)>
<android.opengl.ETC1: void encodeBlock(java.nio.Buffer,int,java.nio.Buffer)>
<android.opengl.ETC1: void decodeBlock(java.nio.Buffer,java.nio.Buffer)>
<android.opengl.ETC1: int getEncodedDataSize(int,int)>
<android.opengl.ETC1: void encodeImage(java.nio.Buffer,int,int,int,int,java.nio.Buffer)>
<android.opengl.ETC1: void decodeImage(java.nio.Buffer,java.nio.Buffer,int,int,int,int)>
<android.opengl.ETC1: void formatHeader(java.nio.Buffer,int,int)>
<android.opengl.ETC1: boolean isValid(java.nio.Buffer)>
<android.opengl.ETC1: int getWidth(java.nio.Buffer)>
<android.opengl.ETC1: int getHeight(java.nio.Buffer)>
<android.opengl.GLES11: void glBindBuffer(int,int)>
<android.opengl.GLES11: void glBufferData(int,int,java.nio.Buffer,int)>
<android.opengl.GLES11: void glBufferSubData(int,int,int,java.nio.Buffer)>
<android.opengl.GLES11: void glClipPlanef(int,float[],int)>
<android.opengl.GLES11: void glClipPlanef(int,java.nio.FloatBuffer)>
<android.opengl.GLES11: void glClipPlanex(int,int[],int)>
<android.opengl.GLES11: void glClipPlanex(int,java.nio.IntBuffer)>
<android.opengl.GLES11: void glColor4ub(byte,byte,byte,byte)>
<android.opengl.GLES11: void glColorPointer(int,int,int,int)>
<android.opengl.GLES11: void glDeleteBuffers(int,int[],int)>
<android.opengl.GLES11: void glDeleteBuffers(int,java.nio.IntBuffer)>
<android.opengl.GLES11: void glDrawElements(int,int,int,int)>
<android.opengl.GLES11: void glGenBuffers(int,int[],int)>
<android.opengl.GLES11: void glGenBuffers(int,java.nio.IntBuffer)>
<android.opengl.GLES11: void glGetBooleanv(int,boolean[],int)>
<android.opengl.GLES11: void glGetBooleanv(int,java.nio.IntBuffer)>
<android.opengl.GLES11: void glGetBufferParameteriv(int,int,int[],int)>
<android.opengl.GLES11: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES11: void glGetClipPlanef(int,float[],int)>
<android.opengl.GLES11: void glGetClipPlanef(int,java.nio.FloatBuffer)>
<android.opengl.GLES11: void glGetClipPlanex(int,int[],int)>
<android.opengl.GLES11: void glGetClipPlanex(int,java.nio.IntBuffer)>
<android.opengl.GLES11: void glGetFixedv(int,int[],int)>
<android.opengl.GLES11: void glGetFixedv(int,java.nio.IntBuffer)>
<android.opengl.GLES11: void glGetFloatv(int,float[],int)>
<android.opengl.GLES11: void glGetFloatv(int,java.nio.FloatBuffer)>
<android.opengl.GLES11: void glGetLightfv(int,int,float[],int)>
<android.opengl.GLES11: void glGetLightfv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLES11: void glGetLightxv(int,int,int[],int)>
<android.opengl.GLES11: void glGetLightxv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES11: void glGetMaterialfv(int,int,float[],int)>
<android.opengl.GLES11: void glGetMaterialfv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLES11: void glGetMaterialxv(int,int,int[],int)>
<android.opengl.GLES11: void glGetMaterialxv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES11: void glGetTexEnvfv(int,int,float[],int)>
<android.opengl.GLES11: void glGetTexEnvfv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLES11: void glGetTexEnviv(int,int,int[],int)>
<android.opengl.GLES11: void glGetTexEnviv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES11: void glGetTexEnvxv(int,int,int[],int)>
<android.opengl.GLES11: void glGetTexEnvxv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES11: void glGetTexParameterfv(int,int,float[],int)>
<android.opengl.GLES11: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLES11: void glGetTexParameteriv(int,int,int[],int)>
<android.opengl.GLES11: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES11: void glGetTexParameterxv(int,int,int[],int)>
<android.opengl.GLES11: void glGetTexParameterxv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES11: boolean glIsBuffer(int)>
<android.opengl.GLES11: boolean glIsEnabled(int)>
<android.opengl.GLES11: boolean glIsTexture(int)>
<android.opengl.GLES11: void glNormalPointer(int,int,int)>
<android.opengl.GLES11: void glPointParameterf(int,float)>
<android.opengl.GLES11: void glPointParameterfv(int,float[],int)>
<android.opengl.GLES11: void glPointParameterfv(int,java.nio.FloatBuffer)>
<android.opengl.GLES11: void glPointParameterx(int,int)>
<android.opengl.GLES11: void glPointParameterxv(int,int[],int)>
<android.opengl.GLES11: void glPointParameterxv(int,java.nio.IntBuffer)>
<android.opengl.GLES11: void glTexCoordPointer(int,int,int,int)>
<android.opengl.GLES11: void glTexEnvi(int,int,int)>
<android.opengl.GLES11: void glTexEnviv(int,int,int[],int)>
<android.opengl.GLES11: void glTexEnviv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES11: void glTexParameterfv(int,int,float[],int)>
<android.opengl.GLES11: void glTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLES11: void glTexParameteri(int,int,int)>
<android.opengl.GLES11: void glTexParameteriv(int,int,int[],int)>
<android.opengl.GLES11: void glTexParameteriv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES11: void glTexParameterxv(int,int,int[],int)>
<android.opengl.GLES11: void glTexParameterxv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES11: void glVertexPointer(int,int,int,int)>
<android.opengl.Visibility: int visibilityTest(float[],int,float[],int,char[],int,int)>
<android.opengl.Visibility: int frustumCullSpheres(float[],int,float[],int,int,int[],int,int)>
<android.opengl.Visibility: void computeBoundingSphere(float[],int,int,float[],int)>
<android.opengl.GLES31Ext: void glBlendBarrierKHR()>
<android.opengl.GLES31Ext: void glDebugMessageControlKHR(int,int,int,int,int[],int,boolean)>
<android.opengl.GLES31Ext: void glDebugMessageControlKHR(int,int,int,int,java.nio.IntBuffer,boolean)>
<android.opengl.GLES31Ext: void glDebugMessageInsertKHR(int,int,int,int,java.lang.String)>
<android.opengl.GLES31Ext: void glDebugMessageCallbackKHR(android.opengl.GLES31Ext$DebugProcKHR)>
<android.opengl.GLES31Ext: int glGetDebugMessageLogKHR(int,int,int[],int,int[],int,int[],int,int[],int,int[],int,byte[],int)>
<android.opengl.GLES31Ext: int glGetDebugMessageLogKHR(int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.ByteBuffer)>
<android.opengl.GLES31Ext: java.lang.String[] glGetDebugMessageLogKHR(int,int[],int,int[],int,int[],int,int[],int)>
<android.opengl.GLES31Ext: java.lang.String[] glGetDebugMessageLogKHR(int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer)>
<android.opengl.GLES31Ext: void glPushDebugGroupKHR(int,int,int,java.lang.String)>
<android.opengl.GLES31Ext: void glPopDebugGroupKHR()>
<android.opengl.GLES31Ext: void glObjectLabelKHR(int,int,int,java.lang.String)>
<android.opengl.GLES31Ext: java.lang.String glGetObjectLabelKHR(int,int)>
<android.opengl.GLES31Ext: void glObjectPtrLabelKHR(long,java.lang.String)>
<android.opengl.GLES31Ext: java.lang.String glGetObjectPtrLabelKHR(long)>
<android.opengl.GLES31Ext: android.opengl.GLES31Ext$DebugProcKHR glGetDebugMessageCallbackKHR()>
<android.opengl.GLES31Ext: void glMinSampleShadingOES(float)>
<android.opengl.GLES31Ext: void glTexStorage3DMultisampleOES(int,int,int,int,int,int,boolean)>
<android.opengl.GLES31Ext: void glCopyImageSubDataEXT(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)>
<android.opengl.GLES31Ext: void glEnableiEXT(int,int)>
<android.opengl.GLES31Ext: void glDisableiEXT(int,int)>
<android.opengl.GLES31Ext: void glBlendEquationiEXT(int,int)>
<android.opengl.GLES31Ext: void glBlendEquationSeparateiEXT(int,int,int)>
<android.opengl.GLES31Ext: void glBlendFunciEXT(int,int,int)>
<android.opengl.GLES31Ext: void glBlendFuncSeparateiEXT(int,int,int,int,int)>
<android.opengl.GLES31Ext: void glColorMaskiEXT(int,boolean,boolean,boolean,boolean)>
<android.opengl.GLES31Ext: boolean glIsEnablediEXT(int,int)>
<android.opengl.GLES31Ext: void glFramebufferTextureEXT(int,int,int,int)>
<android.opengl.GLES31Ext: void glPrimitiveBoundingBoxEXT(float,float,float,float,float,float,float,float)>
<android.opengl.GLES31Ext: void glPatchParameteriEXT(int,int)>
<android.opengl.GLES31Ext: void glTexParameterIivEXT(int,int,int[],int)>
<android.opengl.GLES31Ext: void glTexParameterIivEXT(int,int,java.nio.IntBuffer)>
<android.opengl.GLES31Ext: void glTexParameterIuivEXT(int,int,int[],int)>
<android.opengl.GLES31Ext: void glTexParameterIuivEXT(int,int,java.nio.IntBuffer)>
<android.opengl.GLES31Ext: void glGetTexParameterIivEXT(int,int,int[],int)>
<android.opengl.GLES31Ext: void glGetTexParameterIivEXT(int,int,java.nio.IntBuffer)>
<android.opengl.GLES31Ext: void glGetTexParameterIuivEXT(int,int,int[],int)>
<android.opengl.GLES31Ext: void glGetTexParameterIuivEXT(int,int,java.nio.IntBuffer)>
<android.opengl.GLES31Ext: void glSamplerParameterIivEXT(int,int,int[],int)>
<android.opengl.GLES31Ext: void glSamplerParameterIivEXT(int,int,java.nio.IntBuffer)>
<android.opengl.GLES31Ext: void glSamplerParameterIuivEXT(int,int,int[],int)>
<android.opengl.GLES31Ext: void glSamplerParameterIuivEXT(int,int,java.nio.IntBuffer)>
<android.opengl.GLES31Ext: void glGetSamplerParameterIivEXT(int,int,int[],int)>
<android.opengl.GLES31Ext: void glGetSamplerParameterIivEXT(int,int,java.nio.IntBuffer)>
<android.opengl.GLES31Ext: void glGetSamplerParameterIuivEXT(int,int,int[],int)>
<android.opengl.GLES31Ext: void glGetSamplerParameterIuivEXT(int,int,java.nio.IntBuffer)>
<android.opengl.GLES31Ext: void glTexBufferEXT(int,int,int)>
<android.opengl.GLES31Ext: void glTexBufferRangeEXT(int,int,int,int,int)>
<android.opengl.GLES10: void glActiveTexture(int)>
<android.opengl.GLES10: void glAlphaFunc(int,float)>
<android.opengl.GLES10: void glAlphaFuncx(int,int)>
<android.opengl.GLES10: void glBindTexture(int,int)>
<android.opengl.GLES10: void glBlendFunc(int,int)>
<android.opengl.GLES10: void glClear(int)>
<android.opengl.GLES10: void glClearColor(float,float,float,float)>
<android.opengl.GLES10: void glClearColorx(int,int,int,int)>
<android.opengl.GLES10: void glClearDepthf(float)>
<android.opengl.GLES10: void glClearDepthx(int)>
<android.opengl.GLES10: void glClearStencil(int)>
<android.opengl.GLES10: void glClientActiveTexture(int)>
<android.opengl.GLES10: void glColor4f(float,float,float,float)>
<android.opengl.GLES10: void glColor4x(int,int,int,int)>
<android.opengl.GLES10: void glColorMask(boolean,boolean,boolean,boolean)>
<android.opengl.GLES10: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>
<android.opengl.GLES10: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.opengl.GLES10: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>
<android.opengl.GLES10: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>
<android.opengl.GLES10: void glCullFace(int)>
<android.opengl.GLES10: void glDeleteTextures(int,int[],int)>
<android.opengl.GLES10: void glDeleteTextures(int,java.nio.IntBuffer)>
<android.opengl.GLES10: void glDepthFunc(int)>
<android.opengl.GLES10: void glDepthMask(boolean)>
<android.opengl.GLES10: void glDepthRangef(float,float)>
<android.opengl.GLES10: void glDepthRangex(int,int)>
<android.opengl.GLES10: void glDisable(int)>
<android.opengl.GLES10: void glDisableClientState(int)>
<android.opengl.GLES10: void glDrawArrays(int,int,int)>
<android.opengl.GLES10: void glDrawElements(int,int,int,java.nio.Buffer)>
<android.opengl.GLES10: void glEnable(int)>
<android.opengl.GLES10: void glEnableClientState(int)>
<android.opengl.GLES10: void glFinish()>
<android.opengl.GLES10: void glFlush()>
<android.opengl.GLES10: void glFogf(int,float)>
<android.opengl.GLES10: void glFogfv(int,float[],int)>
<android.opengl.GLES10: void glFogfv(int,java.nio.FloatBuffer)>
<android.opengl.GLES10: void glFogx(int,int)>
<android.opengl.GLES10: void glFogxv(int,int[],int)>
<android.opengl.GLES10: void glFogxv(int,java.nio.IntBuffer)>
<android.opengl.GLES10: void glFrontFace(int)>
<android.opengl.GLES10: void glFrustumf(float,float,float,float,float,float)>
<android.opengl.GLES10: void glFrustumx(int,int,int,int,int,int)>
<android.opengl.GLES10: void glGenTextures(int,int[],int)>
<android.opengl.GLES10: void glGenTextures(int,java.nio.IntBuffer)>
<android.opengl.GLES10: int glGetError()>
<android.opengl.GLES10: void glGetIntegerv(int,int[],int)>
<android.opengl.GLES10: void glGetIntegerv(int,java.nio.IntBuffer)>
<android.opengl.GLES10: java.lang.String glGetString(int)>
<android.opengl.GLES10: void glHint(int,int)>
<android.opengl.GLES10: void glLightModelf(int,float)>
<android.opengl.GLES10: void glLightModelfv(int,float[],int)>
<android.opengl.GLES10: void glLightModelfv(int,java.nio.FloatBuffer)>
<android.opengl.GLES10: void glLightModelx(int,int)>
<android.opengl.GLES10: void glLightModelxv(int,int[],int)>
<android.opengl.GLES10: void glLightModelxv(int,java.nio.IntBuffer)>
<android.opengl.GLES10: void glLightf(int,int,float)>
<android.opengl.GLES10: void glLightfv(int,int,float[],int)>
<android.opengl.GLES10: void glLightfv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLES10: void glLightx(int,int,int)>
<android.opengl.GLES10: void glLightxv(int,int,int[],int)>
<android.opengl.GLES10: void glLightxv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES10: void glLineWidth(float)>
<android.opengl.GLES10: void glLineWidthx(int)>
<android.opengl.GLES10: void glLoadIdentity()>
<android.opengl.GLES10: void glLoadMatrixf(float[],int)>
<android.opengl.GLES10: void glLoadMatrixf(java.nio.FloatBuffer)>
<android.opengl.GLES10: void glLoadMatrixx(int[],int)>
<android.opengl.GLES10: void glLoadMatrixx(java.nio.IntBuffer)>
<android.opengl.GLES10: void glLogicOp(int)>
<android.opengl.GLES10: void glMaterialf(int,int,float)>
<android.opengl.GLES10: void glMaterialfv(int,int,float[],int)>
<android.opengl.GLES10: void glMaterialfv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLES10: void glMaterialx(int,int,int)>
<android.opengl.GLES10: void glMaterialxv(int,int,int[],int)>
<android.opengl.GLES10: void glMaterialxv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES10: void glMatrixMode(int)>
<android.opengl.GLES10: void glMultMatrixf(float[],int)>
<android.opengl.GLES10: void glMultMatrixf(java.nio.FloatBuffer)>
<android.opengl.GLES10: void glMultMatrixx(int[],int)>
<android.opengl.GLES10: void glMultMatrixx(java.nio.IntBuffer)>
<android.opengl.GLES10: void glMultiTexCoord4f(int,float,float,float,float)>
<android.opengl.GLES10: void glMultiTexCoord4x(int,int,int,int,int)>
<android.opengl.GLES10: void glNormal3f(float,float,float)>
<android.opengl.GLES10: void glNormal3x(int,int,int)>
<android.opengl.GLES10: void glOrthof(float,float,float,float,float,float)>
<android.opengl.GLES10: void glOrthox(int,int,int,int,int,int)>
<android.opengl.GLES10: void glPixelStorei(int,int)>
<android.opengl.GLES10: void glPointSize(float)>
<android.opengl.GLES10: void glPointSizex(int)>
<android.opengl.GLES10: void glPolygonOffset(float,float)>
<android.opengl.GLES10: void glPolygonOffsetx(int,int)>
<android.opengl.GLES10: void glPopMatrix()>
<android.opengl.GLES10: void glPushMatrix()>
<android.opengl.GLES10: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>
<android.opengl.GLES10: void glRotatef(float,float,float,float)>
<android.opengl.GLES10: void glRotatex(int,int,int,int)>
<android.opengl.GLES10: void glSampleCoverage(float,boolean)>
<android.opengl.GLES10: void glSampleCoveragex(int,boolean)>
<android.opengl.GLES10: void glScalef(float,float,float)>
<android.opengl.GLES10: void glScalex(int,int,int)>
<android.opengl.GLES10: void glScissor(int,int,int,int)>
<android.opengl.GLES10: void glShadeModel(int)>
<android.opengl.GLES10: void glStencilFunc(int,int,int)>
<android.opengl.GLES10: void glStencilMask(int)>
<android.opengl.GLES10: void glStencilOp(int,int,int)>
<android.opengl.GLES10: void glTexEnvf(int,int,float)>
<android.opengl.GLES10: void glTexEnvfv(int,int,float[],int)>
<android.opengl.GLES10: void glTexEnvfv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLES10: void glTexEnvx(int,int,int)>
<android.opengl.GLES10: void glTexEnvxv(int,int,int[],int)>
<android.opengl.GLES10: void glTexEnvxv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES10: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.opengl.GLES10: void glTexParameterf(int,int,float)>
<android.opengl.GLES10: void glTexParameterx(int,int,int)>
<android.opengl.GLES10: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.opengl.GLES10: void glTranslatef(float,float,float)>
<android.opengl.GLES10: void glTranslatex(int,int,int)>
<android.opengl.GLES10: void glViewport(int,int,int,int)>
<android.opengl.GLES20: void glActiveTexture(int)>
<android.opengl.GLES20: void glAttachShader(int,int)>
<android.opengl.GLES20: void glBindAttribLocation(int,int,java.lang.String)>
<android.opengl.GLES20: void glBindBuffer(int,int)>
<android.opengl.GLES20: void glBindFramebuffer(int,int)>
<android.opengl.GLES20: void glBindRenderbuffer(int,int)>
<android.opengl.GLES20: void glBindTexture(int,int)>
<android.opengl.GLES20: void glBlendColor(float,float,float,float)>
<android.opengl.GLES20: void glBlendEquation(int)>
<android.opengl.GLES20: void glBlendEquationSeparate(int,int)>
<android.opengl.GLES20: void glBlendFunc(int,int)>
<android.opengl.GLES20: void glBlendFuncSeparate(int,int,int,int)>
<android.opengl.GLES20: void glBufferData(int,int,java.nio.Buffer,int)>
<android.opengl.GLES20: void glBufferSubData(int,int,int,java.nio.Buffer)>
<android.opengl.GLES20: int glCheckFramebufferStatus(int)>
<android.opengl.GLES20: void glClear(int)>
<android.opengl.GLES20: void glClearColor(float,float,float,float)>
<android.opengl.GLES20: void glClearDepthf(float)>
<android.opengl.GLES20: void glClearStencil(int)>
<android.opengl.GLES20: void glColorMask(boolean,boolean,boolean,boolean)>
<android.opengl.GLES20: void glCompileShader(int)>
<android.opengl.GLES20: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>
<android.opengl.GLES20: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.opengl.GLES20: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>
<android.opengl.GLES20: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>
<android.opengl.GLES20: int glCreateProgram()>
<android.opengl.GLES20: int glCreateShader(int)>
<android.opengl.GLES20: void glCullFace(int)>
<android.opengl.GLES20: void glDeleteBuffers(int,int[],int)>
<android.opengl.GLES20: void glDeleteBuffers(int,java.nio.IntBuffer)>
<android.opengl.GLES20: void glDeleteFramebuffers(int,int[],int)>
<android.opengl.GLES20: void glDeleteFramebuffers(int,java.nio.IntBuffer)>
<android.opengl.GLES20: void glDeleteProgram(int)>
<android.opengl.GLES20: void glDeleteRenderbuffers(int,int[],int)>
<android.opengl.GLES20: void glDeleteRenderbuffers(int,java.nio.IntBuffer)>
<android.opengl.GLES20: void glDeleteShader(int)>
<android.opengl.GLES20: void glDeleteTextures(int,int[],int)>
<android.opengl.GLES20: void glDeleteTextures(int,java.nio.IntBuffer)>
<android.opengl.GLES20: void glDepthFunc(int)>
<android.opengl.GLES20: void glDepthMask(boolean)>
<android.opengl.GLES20: void glDepthRangef(float,float)>
<android.opengl.GLES20: void glDetachShader(int,int)>
<android.opengl.GLES20: void glDisable(int)>
<android.opengl.GLES20: void glDisableVertexAttribArray(int)>
<android.opengl.GLES20: void glDrawArrays(int,int,int)>
<android.opengl.GLES20: void glDrawElements(int,int,int,int)>
<android.opengl.GLES20: void glDrawElements(int,int,int,java.nio.Buffer)>
<android.opengl.GLES20: void glEnable(int)>
<android.opengl.GLES20: void glEnableVertexAttribArray(int)>
<android.opengl.GLES20: void glFinish()>
<android.opengl.GLES20: void glFlush()>
<android.opengl.GLES20: void glFramebufferRenderbuffer(int,int,int,int)>
<android.opengl.GLES20: void glFramebufferTexture2D(int,int,int,int,int)>
<android.opengl.GLES20: void glFrontFace(int)>
<android.opengl.GLES20: void glGenBuffers(int,int[],int)>
<android.opengl.GLES20: void glGenBuffers(int,java.nio.IntBuffer)>
<android.opengl.GLES20: void glGenerateMipmap(int)>
<android.opengl.GLES20: void glGenFramebuffers(int,int[],int)>
<android.opengl.GLES20: void glGenFramebuffers(int,java.nio.IntBuffer)>
<android.opengl.GLES20: void glGenRenderbuffers(int,int[],int)>
<android.opengl.GLES20: void glGenRenderbuffers(int,java.nio.IntBuffer)>
<android.opengl.GLES20: void glGenTextures(int,int[],int)>
<android.opengl.GLES20: void glGenTextures(int,java.nio.IntBuffer)>
<android.opengl.GLES20: void glGetActiveAttrib(int,int,int,int[],int,int[],int,int[],int,byte[],int)>
<android.opengl.GLES20: java.lang.String glGetActiveAttrib(int,int,int[],int,int[],int)>
<android.opengl.GLES20: java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>
<android.opengl.GLES20: void glGetActiveUniform(int,int,int,int[],int,int[],int,int[],int,byte[],int)>
<android.opengl.GLES20: java.lang.String glGetActiveUniform(int,int,int[],int,int[],int)>
<android.opengl.GLES20: java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>
<android.opengl.GLES20: void glGetAttachedShaders(int,int,int[],int,int[],int)>
<android.opengl.GLES20: void glGetAttachedShaders(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>
<android.opengl.GLES20: int glGetAttribLocation(int,java.lang.String)>
<android.opengl.GLES20: void glGetBooleanv(int,boolean[],int)>
<android.opengl.GLES20: void glGetBooleanv(int,java.nio.IntBuffer)>
<android.opengl.GLES20: void glGetBufferParameteriv(int,int,int[],int)>
<android.opengl.GLES20: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES20: int glGetError()>
<android.opengl.GLES20: void glGetFloatv(int,float[],int)>
<android.opengl.GLES20: void glGetFloatv(int,java.nio.FloatBuffer)>
<android.opengl.GLES20: void glGetFramebufferAttachmentParameteriv(int,int,int,int[],int)>
<android.opengl.GLES20: void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)>
<android.opengl.GLES20: void glGetIntegerv(int,int[],int)>
<android.opengl.GLES20: void glGetIntegerv(int,java.nio.IntBuffer)>
<android.opengl.GLES20: void glGetProgramiv(int,int,int[],int)>
<android.opengl.GLES20: void glGetProgramiv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES20: java.lang.String glGetProgramInfoLog(int)>
<android.opengl.GLES20: void glGetRenderbufferParameteriv(int,int,int[],int)>
<android.opengl.GLES20: void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES20: void glGetShaderiv(int,int,int[],int)>
<android.opengl.GLES20: void glGetShaderiv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES20: java.lang.String glGetShaderInfoLog(int)>
<android.opengl.GLES20: void glGetShaderPrecisionFormat(int,int,int[],int,int[],int)>
<android.opengl.GLES20: void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>
<android.opengl.GLES20: void glGetShaderSource(int,int,int[],int,byte[],int)>
<android.opengl.GLES20: java.lang.String glGetShaderSource(int)>
<android.opengl.GLES20: java.lang.String glGetString(int)>
<android.opengl.GLES20: void glGetTexParameterfv(int,int,float[],int)>
<android.opengl.GLES20: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLES20: void glGetTexParameteriv(int,int,int[],int)>
<android.opengl.GLES20: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES20: void glGetUniformfv(int,int,float[],int)>
<android.opengl.GLES20: void glGetUniformfv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLES20: void glGetUniformiv(int,int,int[],int)>
<android.opengl.GLES20: void glGetUniformiv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>
<android.opengl.GLES20: void glGetVertexAttribfv(int,int,float[],int)>
<android.opengl.GLES20: void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLES20: void glGetVertexAttribiv(int,int,int[],int)>
<android.opengl.GLES20: void glGetVertexAttribiv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES20: void glHint(int,int)>
<android.opengl.GLES20: boolean glIsBuffer(int)>
<android.opengl.GLES20: boolean glIsEnabled(int)>
<android.opengl.GLES20: boolean glIsFramebuffer(int)>
<android.opengl.GLES20: boolean glIsProgram(int)>
<android.opengl.GLES20: boolean glIsRenderbuffer(int)>
<android.opengl.GLES20: boolean glIsShader(int)>
<android.opengl.GLES20: boolean glIsTexture(int)>
<android.opengl.GLES20: void glLineWidth(float)>
<android.opengl.GLES20: void glLinkProgram(int)>
<android.opengl.GLES20: void glPixelStorei(int,int)>
<android.opengl.GLES20: void glPolygonOffset(float,float)>
<android.opengl.GLES20: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>
<android.opengl.GLES20: void glReleaseShaderCompiler()>
<android.opengl.GLES20: void glRenderbufferStorage(int,int,int,int)>
<android.opengl.GLES20: void glSampleCoverage(float,boolean)>
<android.opengl.GLES20: void glScissor(int,int,int,int)>
<android.opengl.GLES20: void glShaderBinary(int,int[],int,int,java.nio.Buffer,int)>
<android.opengl.GLES20: void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)>
<android.opengl.GLES20: void glShaderSource(int,java.lang.String)>
<android.opengl.GLES20: void glStencilFunc(int,int,int)>
<android.opengl.GLES20: void glStencilFuncSeparate(int,int,int,int)>
<android.opengl.GLES20: void glStencilMask(int)>
<android.opengl.GLES20: void glStencilMaskSeparate(int,int)>
<android.opengl.GLES20: void glStencilOp(int,int,int)>
<android.opengl.GLES20: void glStencilOpSeparate(int,int,int,int)>
<android.opengl.GLES20: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.opengl.GLES20: void glTexParameterf(int,int,float)>
<android.opengl.GLES20: void glTexParameterfv(int,int,float[],int)>
<android.opengl.GLES20: void glTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLES20: void glTexParameteri(int,int,int)>
<android.opengl.GLES20: void glTexParameteriv(int,int,int[],int)>
<android.opengl.GLES20: void glTexParameteriv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES20: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.opengl.GLES20: void glUniform1f(int,float)>
<android.opengl.GLES20: void glUniform1fv(int,int,float[],int)>
<android.opengl.GLES20: void glUniform1fv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLES20: void glUniform1i(int,int)>
<android.opengl.GLES20: void glUniform1iv(int,int,int[],int)>
<android.opengl.GLES20: void glUniform1iv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES20: void glUniform2f(int,float,float)>
<android.opengl.GLES20: void glUniform2fv(int,int,float[],int)>
<android.opengl.GLES20: void glUniform2fv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLES20: void glUniform2i(int,int,int)>
<android.opengl.GLES20: void glUniform2iv(int,int,int[],int)>
<android.opengl.GLES20: void glUniform2iv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES20: void glUniform3f(int,float,float,float)>
<android.opengl.GLES20: void glUniform3fv(int,int,float[],int)>
<android.opengl.GLES20: void glUniform3fv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLES20: void glUniform3i(int,int,int,int)>
<android.opengl.GLES20: void glUniform3iv(int,int,int[],int)>
<android.opengl.GLES20: void glUniform3iv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES20: void glUniform4f(int,float,float,float,float)>
<android.opengl.GLES20: void glUniform4fv(int,int,float[],int)>
<android.opengl.GLES20: void glUniform4fv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLES20: void glUniform4i(int,int,int,int,int)>
<android.opengl.GLES20: void glUniform4iv(int,int,int[],int)>
<android.opengl.GLES20: void glUniform4iv(int,int,java.nio.IntBuffer)>
<android.opengl.GLES20: void glUniformMatrix2fv(int,int,boolean,float[],int)>
<android.opengl.GLES20: void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)>
<android.opengl.GLES20: void glUniformMatrix3fv(int,int,boolean,float[],int)>
<android.opengl.GLES20: void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)>
<android.opengl.GLES20: void glUniformMatrix4fv(int,int,boolean,float[],int)>
<android.opengl.GLES20: void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer)>
<android.opengl.GLES20: void glUseProgram(int)>
<android.opengl.GLES20: void glValidateProgram(int)>
<android.opengl.GLES20: void glVertexAttrib1f(int,float)>
<android.opengl.GLES20: void glVertexAttrib1fv(int,float[],int)>
<android.opengl.GLES20: void glVertexAttrib1fv(int,java.nio.FloatBuffer)>
<android.opengl.GLES20: void glVertexAttrib2f(int,float,float)>
<android.opengl.GLES20: void glVertexAttrib2fv(int,float[],int)>
<android.opengl.GLES20: void glVertexAttrib2fv(int,java.nio.FloatBuffer)>
<android.opengl.GLES20: void glVertexAttrib3f(int,float,float,float)>
<android.opengl.GLES20: void glVertexAttrib3fv(int,float[],int)>
<android.opengl.GLES20: void glVertexAttrib3fv(int,java.nio.FloatBuffer)>
<android.opengl.GLES20: void glVertexAttrib4f(int,float,float,float,float)>
<android.opengl.GLES20: void glVertexAttrib4fv(int,float[],int)>
<android.opengl.GLES20: void glVertexAttrib4fv(int,java.nio.FloatBuffer)>
<android.opengl.GLES20: void glVertexAttribPointer(int,int,int,boolean,int,int)>
<android.opengl.GLES20: void glViewport(int,int,int,int)>
<android.graphics.Movie: int width()>
<android.graphics.Movie: int height()>
<android.graphics.Movie: boolean isOpaque()>
<android.graphics.Movie: int duration()>
<android.graphics.Movie: boolean setTime(int)>
<android.graphics.Movie: android.graphics.Movie decodeByteArray(byte[],int,int)>
<android.graphics.Region: boolean isEmpty()>
<android.graphics.Region: boolean isRect()>
<android.graphics.Region: boolean isComplex()>
<android.graphics.Region: boolean contains(int,int)>
<android.graphics.Region: boolean quickContains(int,int,int,int)>
<android.graphics.Region: boolean quickReject(int,int,int,int)>
<android.graphics.Region: boolean quickReject(android.graphics.Region)>
<android.graphics.Region: void translate(int,int,android.graphics.Region)>
<android.graphics.Camera: void save()>
<android.graphics.Camera: void restore()>
<android.graphics.Camera: void translate(float,float,float)>
<android.graphics.Camera: void rotateX(float)>
<android.graphics.Camera: void rotateY(float)>
<android.graphics.Camera: void rotateZ(float)>
<android.graphics.Camera: void rotate(float,float,float)>
<android.graphics.Camera: float getLocationX()>
<android.graphics.Camera: float getLocationY()>
<android.graphics.Camera: float getLocationZ()>
<android.graphics.Camera: void setLocation(float,float,float)>
<android.graphics.Camera: float dotWithNormal(float,float,float)>
<android.graphics.NinePatch: boolean isNinePatchChunk(byte[])>
<java.lang.Float: int floatToRawIntBits(float)>
<java.lang.Float: float intBitsToFloat(int)>
<java.lang.StrictMath: double sin(double)>
<java.lang.StrictMath: double cos(double)>
<java.lang.StrictMath: double tan(double)>
<java.lang.StrictMath: double asin(double)>
<java.lang.StrictMath: double acos(double)>
<java.lang.StrictMath: double atan(double)>
<java.lang.StrictMath: double exp(double)>
<java.lang.StrictMath: double log(double)>
<java.lang.StrictMath: double log10(double)>
<java.lang.StrictMath: double sqrt(double)>
<java.lang.StrictMath: double cbrt(double)>
<java.lang.StrictMath: double IEEEremainder(double,double)>
<java.lang.StrictMath: double atan2(double,double)>
<java.lang.StrictMath: double pow(double,double)>
<java.lang.StrictMath: double sinh(double)>
<java.lang.StrictMath: double cosh(double)>
<java.lang.StrictMath: double tanh(double)>
<java.lang.StrictMath: double hypot(double,double)>
<java.lang.StrictMath: double expm1(double)>
<java.lang.StrictMath: double log1p(double)>
<java.lang.String: char charAt(int)>
<java.lang.String: int compareTo(java.lang.String)>
<java.lang.String: java.lang.String concat(java.lang.String)>
<java.lang.String: char[] toCharArray()>
<java.lang.String: java.lang.String intern()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>
<java.lang.reflect.Field: byte getByte(java.lang.Object)>
<java.lang.reflect.Field: char getChar(java.lang.Object)>
<java.lang.reflect.Field: short getShort(java.lang.Object)>
<java.lang.reflect.Field: int getInt(java.lang.Object)>
<java.lang.reflect.Field: long getLong(java.lang.Object)>
<java.lang.reflect.Field: float getFloat(java.lang.Object)>
<java.lang.reflect.Field: double getDouble(java.lang.Object)>
<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>
<java.lang.reflect.Field: void setBoolean(java.lang.Object,boolean)>
<java.lang.reflect.Field: void setByte(java.lang.Object,byte)>
<java.lang.reflect.Field: void setChar(java.lang.Object,char)>
<java.lang.reflect.Field: void setShort(java.lang.Object,short)>
<java.lang.reflect.Field: void setInt(java.lang.Object,int)>
<java.lang.reflect.Field: void setLong(java.lang.Object,long)>
<java.lang.reflect.Field: void setFloat(java.lang.Object,float)>
<java.lang.reflect.Field: void setDouble(java.lang.Object,double)>
<java.lang.reflect.Field: java.lang.annotation.Annotation[] getDeclaredAnnotations()>
<java.lang.reflect.Constructor: java.lang.Class[] getExceptionTypes()>
<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>
<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>
<java.lang.reflect.Method: java.lang.Object getDefaultValue()>
<java.lang.UNIXProcess: int waitForProcessExit(int)>
<java.lang.UNIXProcess: int forkAndExec(int,byte[],byte[],byte[],int,byte[],int,byte[],int[],boolean)>
<java.lang.UNIXProcess: void destroyProcess(int)>
<java.lang.UNIXProcess: void init()>
<java.lang.Double: long doubleToRawLongBits(double)>
<java.lang.Double: double longBitsToDouble(long)>
<java.lang.Runtime: long freeMemory()>
<java.lang.Runtime: long totalMemory()>
<java.lang.Runtime: long maxMemory()>
<java.lang.Runtime: void gc()>
<java.lang.invoke.MethodHandle: java.lang.Object invokeExact(java.lang.Object[])>
<java.lang.invoke.MethodHandle: java.lang.Object invoke(java.lang.Object[])>
<java.lang.System: long currentTimeMillis()>
<java.lang.System: long nanoTime()>
<java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>
<java.lang.System: java.lang.String mapLibraryName(java.lang.String)>
<java.lang.Object: void notify()>
<java.lang.Object: void notifyAll()>
<java.lang.Object: void wait(long,int)>
<java.lang.Object: void wait()>
<java.lang.Class: java.lang.Object newInstance()>
<java.lang.Class: java.lang.Class getDeclaringClass()>
<java.lang.Class: java.lang.Class getEnclosingClass()>
<java.lang.Class: boolean isAnonymousClass()>
<java.lang.Class: java.lang.Class[] getDeclaredClasses()>
<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>
<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<java.lang.Class: java.lang.annotation.Annotation getDeclaredAnnotation(java.lang.Class)>
<java.lang.Class: java.lang.annotation.Annotation[] getDeclaredAnnotations()>
<java.lang.Thread: java.lang.Thread currentThread()>
<java.lang.Thread: void yield()>
<java.lang.Thread: boolean interrupted()>
<java.lang.Thread: boolean isInterrupted()>
<java.lang.Math: double sin(double)>
<java.lang.Math: double cos(double)>
<java.lang.Math: double tan(double)>
<java.lang.Math: double asin(double)>
<java.lang.Math: double acos(double)>
<java.lang.Math: double atan(double)>
<java.lang.Math: double exp(double)>
<java.lang.Math: double log(double)>
<java.lang.Math: double log10(double)>
<java.lang.Math: double sqrt(double)>
<java.lang.Math: double cbrt(double)>
<java.lang.Math: double IEEEremainder(double,double)>
<java.lang.Math: double ceil(double)>
<java.lang.Math: double floor(double)>
<java.lang.Math: double rint(double)>
<java.lang.Math: double atan2(double,double)>
<java.lang.Math: double pow(double,double)>
<java.lang.Math: double sinh(double)>
<java.lang.Math: double cosh(double)>
<java.lang.Math: double tanh(double)>
<java.lang.Math: double hypot(double,double)>
<java.lang.Math: double expm1(double)>
<java.lang.Math: double log1p(double)>
<java.lang.ProcessEnvironment: byte[][] environ()>
<java.net.PlainSocketImpl: void socketCreate(boolean)>
<java.net.PlainSocketImpl: void socketConnect(java.net.InetAddress,int,int)>
<java.net.PlainSocketImpl: void socketBind(java.net.InetAddress,int)>
<java.net.PlainSocketImpl: void socketListen(int)>
<java.net.PlainSocketImpl: void socketAccept(java.net.SocketImpl)>
<java.net.PlainSocketImpl: int socketAvailable()>
<java.net.PlainSocketImpl: void socketClose0(boolean)>
<java.net.PlainSocketImpl: void socketShutdown(int)>
<java.net.PlainSocketImpl: void initProto()>
<java.net.PlainSocketImpl: void socketSetOption(int,boolean,java.lang.Object)>
<java.net.PlainSocketImpl: int socketGetOption(int,java.lang.Object)>
<java.net.PlainSocketImpl: void socketSendUrgentData(int)>
<java.net.PlainDatagramSocketImpl: void bind0(int,java.net.InetAddress)>
<java.net.PlainDatagramSocketImpl: void send(java.net.DatagramPacket)>
<java.net.PlainDatagramSocketImpl: int peek(java.net.InetAddress)>
<java.net.PlainDatagramSocketImpl: int peekData(java.net.DatagramPacket)>
<java.net.PlainDatagramSocketImpl: void receive0(java.net.DatagramPacket)>
<java.net.PlainDatagramSocketImpl: void setTimeToLive(int)>
<java.net.PlainDatagramSocketImpl: int getTimeToLive()>
<java.net.PlainDatagramSocketImpl: void setTTL(byte)>
<java.net.PlainDatagramSocketImpl: byte getTTL()>
<java.net.PlainDatagramSocketImpl: void join(java.net.InetAddress,java.net.NetworkInterface)>
<java.net.PlainDatagramSocketImpl: void leave(java.net.InetAddress,java.net.NetworkInterface)>
<java.net.PlainDatagramSocketImpl: void datagramSocketCreate()>
<java.net.PlainDatagramSocketImpl: void datagramSocketClose()>
<java.net.PlainDatagramSocketImpl: void socketSetOption(int,java.lang.Object)>
<java.net.PlainDatagramSocketImpl: java.lang.Object socketGetOption(int)>
<java.net.PlainDatagramSocketImpl: void connect0(java.net.InetAddress,int)>
<java.net.PlainDatagramSocketImpl: void disconnect0(int)>
<java.net.PlainDatagramSocketImpl: void init()>
<java.net.SocketOutputStream: void socketWrite0(java.io.FileDescriptor,byte[],int,int)>
<java.net.SocketOutputStream: void init()>
<java.net.AbstractPlainDatagramSocketImpl: int dataAvailable()>
<java.net.AbstractPlainDatagramSocketImpl: void init()>
<java.net.Inet6AddressImpl: java.lang.String getLocalHostName()>
<java.net.Inet6AddressImpl: java.net.InetAddress[] lookupAllHostAddr(java.lang.String)>
<java.net.Inet6AddressImpl: java.lang.String getHostByAddr(byte[])>
<java.net.Inet6AddressImpl: boolean isReachable0(byte[],int,int,byte[],int,int)>
<java.net.SocketInputStream: int socketRead0(java.io.FileDescriptor,byte[],int,int,int)>
<java.net.SocketInputStream: void init()>
<java.io.UnixFileSystem: java.lang.String canonicalize0(java.lang.String)>
<java.io.UnixFileSystem: int getBooleanAttributes0(java.io.File)>
<java.io.UnixFileSystem: boolean checkAccess(java.io.File,int)>
<java.io.UnixFileSystem: long getLastModifiedTime(java.io.File)>
<java.io.UnixFileSystem: long getLength(java.io.File)>
<java.io.UnixFileSystem: boolean setPermission(java.io.File,int,boolean,boolean)>
<java.io.UnixFileSystem: boolean createFileExclusively(java.lang.String)>
<java.io.UnixFileSystem: boolean delete0(java.io.File)>
<java.io.UnixFileSystem: java.lang.String[] list(java.io.File)>
<java.io.UnixFileSystem: boolean createDirectory(java.io.File)>
<java.io.UnixFileSystem: boolean rename0(java.io.File,java.io.File)>
<java.io.UnixFileSystem: boolean setLastModifiedTime(java.io.File,long)>
<java.io.UnixFileSystem: boolean setReadOnly(java.io.File)>
<java.io.UnixFileSystem: long getSpace(java.io.File,int)>
<java.io.UnixFileSystem: void initIDs()>
<java.io.FileSystem: java.io.FileSystem getFileSystem()>
<java.io.FileDescriptor: void sync()>
<java.nio.Bits: void copyFromShortArray(java.lang.Object,long,long,long)>
<java.nio.Bits: void copyToShortArray(long,java.lang.Object,long,long)>
<java.nio.Bits: void copyFromIntArray(java.lang.Object,long,long,long)>
<java.nio.Bits: void copyToIntArray(long,java.lang.Object,long,long)>
<java.nio.Bits: void copyFromLongArray(java.lang.Object,long,long,long)>
<java.nio.Bits: void copyToLongArray(long,java.lang.Object,long,long)>
<java.util.prefs.FileSystemPreferences: int[] lockFile0(java.lang.String,int,boolean)>
<java.util.prefs.FileSystemPreferences: int unlockFile0(int)>
<java.util.prefs.FileSystemPreferences: int chmod(java.lang.String,int)>
